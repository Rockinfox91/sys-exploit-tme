=====================================================

2I015 - COMPTE-RENDU TME 3 (Entrées/sorties)

Noms, prénoms et numéro des étudiants du binôme :
1) Lucas BOISTAY 3809291
2) //

=====================================================


EXERCICE 1 : TUBES ANONYMES
===========================

#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <time.h>

int main(int argc, char *argv[]){
	if (argc > 1){
		printf("Trop d'arguments !\n");
	}

	int fd[2];
	int nb;
	srand(time(NULL));

	pipe(fd);

	if(fork() == 0){ //Papa créer Fils 1, Ecrivain
		close(fd[0]);

		nb = rand() % 100;

		printf("Numéro choisi : %d\n", nb);

		char cnb[2];

		sprintf(cnb,"%d",nb);

		printf("Je suis le FILS 1 et je vais écrire %s\n",cnb);

		write(fd[1],&cnb,sizeof(int));
		close(fd[1]);

		printf("Fin FILS 1\n");
		exit(EXIT_SUCCESS);
	}
	else{ // Papa va créer un deuxième fils
		if(fork()==0){ // Papa créer FILS 2, Lecteur
			close(fd[1]);

			char cnb[2];

			read(fd[0],cnb,2*sizeof(char));

			printf("Je suis le FILS 2 et je lis %s\n", cnb);

			close(fd[0]);

			printf("Fin FILS 2\n");
			exit(EXIT_SUCCESS);
		}
	}

	wait(NULL);
	wait(NULL);
	printf("FIN PAPA\n");
	exit(0);
}


EXERCICE 2 : TUBES NOMMES
=========================

#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <sys/stat.h>
#include <time.h>
#include <fcntl.h>

int main(int argc, char *argv[]){
	if(argc<2){
		printf("Pas assez d'arguments.\n");
		exit(EXIT_FAILURE);
	}

	mkfifo(argv[1], S_IWUSR|S_IRUSR );

	int fd = open(argv[1],O_WRONLY);

	int nb = rand() % 100;
	char cnb[2];
	sprintf(cnb,"%d",nb); 

	write(fd,cnb,2*sizeof(char));

	printf("J'ai écrit %s\n", cnb);

	close(fd);

	exit(EXIT_SUCCESS);

}



#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <sys/stat.h>

#include <fcntl.h>

int main(int argc, char *argv[]){

	if(argc<2){
		printf("Pas assez d'arguments.\n");
		exit(EXIT_FAILURE);
	}

	int fd = open(argv[1],O_RDONLY);

	char cnb[2];

	read(fd,cnb,2*sizeof(char));

	printf("J'ai lu %s\n", cnb);

	exit(EXIT_SUCCESS);

}

EXERCICE 3 : OUVERTURES MULTIPLES ET PARTAGE D'OFFSET
=====================================================

#include<stdio.h>
#include<stdlib.h>
#include<sys/types.h>
#include<unistd.h>
#include<sys/wait.h>
#include<dirent.h>
#include<string.h>
#include<time.h>
#include<sys/stat.h>
#include<fcntl.h>

void lecture(int fic,int n){
	int lect = -1;

	for(int i=0;i<n;i++){
		read(fic,&lect,1);
		printf("%d a lu %c\n",getpid(), lect);
	}

	printf("Le fils %d se termine\n", getpid());

	exit(0);
}

int main(int argc, char* argv[]){

	if(argc < 2){
		printf("Pas assez d'arguments\n");
		exit(EXIT_FAILURE);
	}

	int lect;
	int fic;

	fic = open(argv[1],O_RDONLY);

	printf("Le pere %d commence\n", getpid());

	if(fork()==0){
		printf("Le premier fils %d commence\n",getpid());
		lecture(fic, 3);
	}

	wait(NULL);

	if(fork()!=0){
		read(fic,&lect,1);
		printf("%d a lu %c\n", getpid(), lect);
	}else{
		printf("Le second fils %d commence\n", getpid());
		lecture(fic, 3);
	}

	wait(NULL);

	close(fic);


	int fic2;

	fic2 = open(argv[1],O_RDONLY);

	if(fork()==0){
		printf("Le troisieme fils %d commence \n", getpid());
		lecture(fic2, 4);
	}

	wait(NULL);

	printf("le pere %d se termine\n", getpid());

	close(fic2);
}


EXERCICE 4 : INCOHERENCES DUES AUX COMMUTATIONS
===============================================

A causes de problème sur ma machine personnelle, je n'ai pas pu finir le TME.
Il fallait ici utiliser execl après deux fork. 
